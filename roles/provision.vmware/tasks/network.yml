---
- name: Remove existing guest network adapter
  community.vmware.vmware_guest_network:
    moid: "{{ item.instance.moid }}"
    datacenter: "{{ provision_vmware_datacenter }}"
    cluster: "{{ provision_vmware_cluster | default(omit) }}"
    esxi_hostname: "{{ provision_vmware_esxi_hostname |Â default(omit) }}"
    networks:
      - state: absent
        label: "Network adapter 1"
    validate_certs: false
  delegate_to: localhost
  with_items: "{{ clone.results }}"
  async: 300
  poll: 0
  register: network_remove_async

- name: Wait until existing guest network adapter is removed
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  with_items: "{{ network_remove_async.results }}"
  until: network_remove.finished
  retries: 120
  delegate_to: localhost
  register: network_remove

- name: Configure guest network adapter
  community.vmware.vmware_guest_network:
    moid: "{{ item.instance.moid }}"
    datacenter: "{{ provision_vmware_datacenter }}"
    cluster: "{{ provision_vmware_cluster | default(omit) }}"
    esxi_hostname: "{{ provision_vmware_esxi_hostname | default (omit) }}"
    networks:
      - state: new
        name: "{{ provision_vmware_primary_network }}"
        dvswitch_name: "{{ provision_vmware_primary_network_dvswitch_name }}"
        device_type: vmxnet3
        connected: true
        start_connected: true
    validate_certs: false
  delegate_to: localhost
  with_items: "{{ clone.results }}"
  async: 300
  poll: 0
  register: network_add_async

- name: Wait until network configuration completes
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  with_items: "{{ network_add_async.results }}"
  until: network_add.finished
  retries: 120
  delegate_to: localhost
  register: network_add
...
